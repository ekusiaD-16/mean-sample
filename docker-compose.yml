version: "3.3"
services:
  web-app-fe:
    image: web-app-fe:${TAG}
    container_name: web-app-fe
    hostname: web-app-fe
    build:
      context: ./web-app/frontend
      dockerfile: Dockerfile
      args:
        - UID=1000
        - GID=1000
        - UNAME=app
        - GNAME=app
    restart: always
    volumes:
      - ./web-app/frontend:/workspace/app/frontend
    tty: true
    ports:
      - 4200:4200
      - 8080:8080
    networks:
      - replset
    logging:
      driver: json-file
      options:
        max-file: '1'
        max-size: 3m

  web-app-be:
    image: web-app-be:${TAG}
    container_name: web-app-be
    hostname: web-app-be
    build:
      context: ./web-app/backend
      dockerfile: Dockerfile
      args:
        - UID=1000
        - GID=1000
        - UNAME=app
        - GNAME=app
    restart: always
    volumes:
      - ./web-app/backend:/workspace/app/backend
    tty: true
    ports:
      - 3001:3001
    networks:
      - replset
    links: 
      - mongodb-primary
    logging:
      driver: json-file
      options:
        max-file: '1'
        max-size: 3m


  mongodb-primary:
    container_name: mongodb-primary
    hostname: mongodb-primary
    image: mongo:4.0.3
    restart: always
    volumes:
      - ./mongodb/primary/db:/data/db
      - ./mongodb/primary/configdb:/data/configdb
      - ./mongodb/init:/docker-entrypoint-initdb.d
    command: mongod --replSet replset --oplogSize 1000
    expose:
      - 27017
    ports:
      - 50000:27017
    networks: 
      - replset
    logging:
      driver: json-file
      options:
        max-file: '1'
        max-size: 3m

  mongodb-secondary:
    container_name: mongodb-secondary
    hostname: mongodb-secondary
    image: mongo:4.0.3
    restart: always
    volumes:
      - ./mongodb/secondary/db:/data/db
      - ./mongodb/secondary/configdb:/data/configdb
    command: mongod --replSet replset --oplogSize 1000
    expose:
      - 27017
    ports:
      - 50001:27017
    networks: 
      - replset
    logging:
      driver: json-file
      options:
        max-file: '1'
        max-size: 3m

  mongodb-arbiter:
    container_name: mongodb-arbiter
    hostname: mongodb-arbiter
    image: mongo:4.0.3
    restart: always
    volumes:
      - ./mongodb/arbiter/db:/data/db
      - ./mongodb/arbiter/configdb:/data/configdb
    command: mongod --replSet replset --oplogSize 1000
    expose:
      - 27017
    ports:
      - 50002:27017
    networks: 
      - replset
    logging:
      driver: json-file
      options:
        max-file: '1'
        max-size: 3m


  # kafka:
  #   container_name: kafka_c
  #   hostname: kafka
  #   image: kafka_i
  #   build: ./kafka
  #   ports:
  #     - 9092:9092
  #     - 2181:2181
  #   environment:
  #     KAFKA_ADVERTISED_HOST_NAME: 172.25.251.82 # ifconfigにて調べる
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock
  #     - ./kafka/kafka_2.11-1.0.0/:/opt/kafka/
  #   tty: true
  #   networks:
  #     - replset

  fluentd:
    container_name: fluentd_c
    hostname: fluentd
    image: fluentd_i
    build: ./fluentd
    ports:
      - 24224:24224
      - 9999:9999
    volumes:
      - ./fluentd/:/etc/td-agent/
    # depends_on:
      # - kafka
    restart: always
    tty: true
    networks:
      - replset

  kafka_consumer:
    container_name: kafka_consumer_c
    image: kafka_consumer_i
    build: ./kafka_consumer
    volumes:
      - ./kafka_consumer/src:/python/src/
    tty: true
    networks:
      - replset

  # python:
  #   container_name: python_c
  #   image: python_i
  #   build: ./python
  #   volumes:
  #     - ./python:/python/src
  #   tty: true
  #   networks:
  #     - replset

  # node:
  #   container_name: node_c
  #   image: node:14.17.3
  #   volumes:
  #     - ./node:/node/src/
  #   tty:  true
  #   networks:
  #     - replset

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    hostname: zookeeper
    container_name: zookeeper
    networks:
      - replset
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-kafka:latest
    hostname: broker
    container_name: broker
    depends_on:
      - zookeeper
    networks:
      - replset
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_LISTENERS: LISTENER_1://broker:29092,LISTENER_2://broker:9092
      KAFKA_ADVERTISED_LISTENERS: LISTENER_1://broker:29092,LISTENER_2://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_1:PLAINTEXT,LISTENER_2:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      CONFLUENT_SUPPORT_CUSTOMER_ID: "anonymous"
      KAFKA_DELETE_TOPIC_ENABLE: "true"

  connect:
    image: quickstart-connect-1.7.0:1.0
    build: ./connect
    hostname: connect
    container_name: connect
    depends_on:
      - broker
      - zookeeper
    networks:
      - replset
    environment:
      CONNECT_BOOTSTRAP_SERVERS: "broker:29092"
      CONNECT_REST_ADVERTISED_HOST_NAME: connect
      CONNECT_REST_PORT: 8083
      CONNECT_GROUP_ID: connect-cluster-group
      CONNECT_CONFIG_STORAGE_TOPIC: docker-connect-configs
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_OFFSET_FLUSH_INTERVAL_MS: 10000
      CONNECT_OFFSET_STORAGE_TOPIC: docker-connect-offsets
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_STATUS_STORAGE_TOPIC: docker-connect-status
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_ZOOKEEPER_CONNECT: "zookeeper:2181"
      CONNECT_PLUGIN_PATH: "/usr/share/java,/usr/share/confluent-hub-components"
      CONNECT_AUTO_CREATE_TOPICS_ENABLE: "true"
      CONNECT_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"

  shell:
    image: "quickstart-shell:1.0"
    container_name: shell
    build: ./shell
    depends_on:
      - zookeeper
      - broker
      - connect
      # - mongo1
    networks:
      - replset
    command: "tail -f /dev/null"

networks:
  replset:
